// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: api.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId      string                 `protobuf:"bytes,1,opt,name=WorkerId,proto3" json:"WorkerId,omitempty"`
	SourceType    string                 `protobuf:"bytes,2,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
	SourceUrl     string                 `protobuf:"bytes,3,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
	CourseSlug    string                 `protobuf:"bytes,4,opt,name=CourseSlug,proto3" json:"CourseSlug,omitempty"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=Start,proto3" json:"Start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=End,proto3" json:"End,omitempty"`
	PublishStream bool                   `protobuf:"varint,8,opt,name=PublishStream,proto3" json:"PublishStream,omitempty"`
	PublishVoD    bool                   `protobuf:"varint,9,opt,name=PublishVoD,proto3" json:"PublishVoD,omitempty"`
	StreamID      uint32                 `protobuf:"varint,10,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	CourseTerm    string                 `protobuf:"bytes,11,opt,name=CourseTerm,proto3" json:"CourseTerm,omitempty"`
	CourseYear    uint32                 `protobuf:"varint,12,opt,name=CourseYear,proto3" json:"CourseYear,omitempty"`
	StreamName    string                 `protobuf:"bytes,13,opt,name=StreamName,proto3" json:"StreamName,omitempty"`
	IngestServer  string                 `protobuf:"bytes,14,opt,name=IngestServer,proto3" json:"IngestServer,omitempty"`
	OutUrl        string                 `protobuf:"bytes,15,opt,name=OutUrl,proto3" json:"OutUrl,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *StreamRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *StreamRequest) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *StreamRequest) GetCourseSlug() string {
	if x != nil {
		return x.CourseSlug
	}
	return ""
}

func (x *StreamRequest) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *StreamRequest) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *StreamRequest) GetPublishStream() bool {
	if x != nil {
		return x.PublishStream
	}
	return false
}

func (x *StreamRequest) GetPublishVoD() bool {
	if x != nil {
		return x.PublishVoD
	}
	return false
}

func (x *StreamRequest) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *StreamRequest) GetCourseTerm() string {
	if x != nil {
		return x.CourseTerm
	}
	return ""
}

func (x *StreamRequest) GetCourseYear() uint32 {
	if x != nil {
		return x.CourseYear
	}
	return 0
}

func (x *StreamRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *StreamRequest) GetIngestServer() string {
	if x != nil {
		return x.IngestServer
	}
	return ""
}

func (x *StreamRequest) GetOutUrl() string {
	if x != nil {
		return x.OutUrl
	}
	return ""
}

type PremiereRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID     uint32 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	WorkerID     string `protobuf:"bytes,3,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamName   string `protobuf:"bytes,4,opt,name=StreamName,proto3" json:"StreamName,omitempty"`
	IngestServer string `protobuf:"bytes,5,opt,name=IngestServer,proto3" json:"IngestServer,omitempty"`
	OutUrl       string `protobuf:"bytes,6,opt,name=OutUrl,proto3" json:"OutUrl,omitempty"`
}

func (x *PremiereRequest) Reset() {
	*x = PremiereRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PremiereRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PremiereRequest) ProtoMessage() {}

func (x *PremiereRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PremiereRequest.ProtoReflect.Descriptor instead.
func (*PremiereRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *PremiereRequest) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *PremiereRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *PremiereRequest) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *PremiereRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *PremiereRequest) GetIngestServer() string {
	if x != nil {
		return x.IngestServer
	}
	return ""
}

func (x *PremiereRequest) GetOutUrl() string {
	if x != nil {
		return x.OutUrl
	}
	return ""
}

type EndStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID   uint32 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	WorkerID   string `protobuf:"bytes,2,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamName string `protobuf:"bytes,3,opt,name=StreamName,proto3" json:"StreamName,omitempty"`
}

func (x *EndStreamRequest) Reset() {
	*x = EndStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndStreamRequest) ProtoMessage() {}

func (x *EndStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndStreamRequest.ProtoReflect.Descriptor instead.
func (*EndStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *EndStreamRequest) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *EndStreamRequest) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *EndStreamRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Status) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type SelfStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID   string `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamKey  string `protobuf:"bytes,2,opt,name=StreamKey,proto3" json:"StreamKey,omitempty"`
	CourseSlug string `protobuf:"bytes,3,opt,name=CourseSlug,proto3" json:"CourseSlug,omitempty"`
}

func (x *SelfStreamRequest) Reset() {
	*x = SelfStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfStreamRequest) ProtoMessage() {}

func (x *SelfStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfStreamRequest.ProtoReflect.Descriptor instead.
func (*SelfStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *SelfStreamRequest) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *SelfStreamRequest) GetStreamKey() string {
	if x != nil {
		return x.StreamKey
	}
	return ""
}

func (x *SelfStreamRequest) GetCourseSlug() string {
	if x != nil {
		return x.CourseSlug
	}
	return ""
}

type SelfStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID     uint32                 `protobuf:"varint,1,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	CourseSlug   string                 `protobuf:"bytes,2,opt,name=CourseSlug,proto3" json:"CourseSlug,omitempty"`
	CourseYear   uint32                 `protobuf:"varint,3,opt,name=CourseYear,proto3" json:"CourseYear,omitempty"`
	StreamStart  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=StreamStart,proto3" json:"StreamStart,omitempty"`
	CourseTerm   string                 `protobuf:"bytes,5,opt,name=CourseTerm,proto3" json:"CourseTerm,omitempty"`
	UploadVoD    bool                   `protobuf:"varint,6,opt,name=uploadVoD,proto3" json:"uploadVoD,omitempty"`
	IngestServer string                 `protobuf:"bytes,7,opt,name=IngestServer,proto3" json:"IngestServer,omitempty"`
	StreamName   string                 `protobuf:"bytes,8,opt,name=StreamName,proto3" json:"StreamName,omitempty"`
	OutUrl       string                 `protobuf:"bytes,9,opt,name=OutUrl,proto3" json:"OutUrl,omitempty"`
}

func (x *SelfStreamResponse) Reset() {
	*x = SelfStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfStreamResponse) ProtoMessage() {}

func (x *SelfStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfStreamResponse.ProtoReflect.Descriptor instead.
func (*SelfStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *SelfStreamResponse) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *SelfStreamResponse) GetCourseSlug() string {
	if x != nil {
		return x.CourseSlug
	}
	return ""
}

func (x *SelfStreamResponse) GetCourseYear() uint32 {
	if x != nil {
		return x.CourseYear
	}
	return 0
}

func (x *SelfStreamResponse) GetStreamStart() *timestamppb.Timestamp {
	if x != nil {
		return x.StreamStart
	}
	return nil
}

func (x *SelfStreamResponse) GetCourseTerm() string {
	if x != nil {
		return x.CourseTerm
	}
	return ""
}

func (x *SelfStreamResponse) GetUploadVoD() bool {
	if x != nil {
		return x.UploadVoD
	}
	return false
}

func (x *SelfStreamResponse) GetIngestServer() string {
	if x != nil {
		return x.IngestServer
	}
	return ""
}

func (x *SelfStreamResponse) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *SelfStreamResponse) GetOutUrl() string {
	if x != nil {
		return x.OutUrl
	}
	return ""
}

type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID string   `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	Workload uint32   `protobuf:"varint,2,opt,name=Workload,proto3" json:"Workload,omitempty"`
	Jobs     []string `protobuf:"bytes,3,rep,name=Jobs,proto3" json:"Jobs,omitempty"`
	Version  string   `protobuf:"bytes,4,opt,name=Version,proto3" json:"Version,omitempty"`
	CPU      string   `protobuf:"bytes,5,opt,name=CPU,proto3" json:"CPU,omitempty"`
	Memory   string   `protobuf:"bytes,6,opt,name=Memory,proto3" json:"Memory,omitempty"`
	Disk     string   `protobuf:"bytes,7,opt,name=Disk,proto3" json:"Disk,omitempty"`
	Uptime   string   `protobuf:"bytes,8,opt,name=Uptime,proto3" json:"Uptime,omitempty"`
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *HeartBeat) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *HeartBeat) GetWorkload() uint32 {
	if x != nil {
		return x.Workload
	}
	return 0
}

func (x *HeartBeat) GetJobs() []string {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *HeartBeat) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HeartBeat) GetCPU() string {
	if x != nil {
		return x.CPU
	}
	return ""
}

func (x *HeartBeat) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *HeartBeat) GetDisk() string {
	if x != nil {
		return x.Disk
	}
	return ""
}

func (x *HeartBeat) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

type StreamFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID string `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamID uint32 `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
}

func (x *StreamFinished) Reset() {
	*x = StreamFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFinished) ProtoMessage() {}

func (x *StreamFinished) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFinished.ProtoReflect.Descriptor instead.
func (*StreamFinished) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *StreamFinished) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *StreamFinished) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type TranscodingFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID string `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamID uint32 `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	FilePath string `protobuf:"bytes,3,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	Duration uint32 `protobuf:"varint,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *TranscodingFinished) Reset() {
	*x = TranscodingFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscodingFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodingFinished) ProtoMessage() {}

func (x *TranscodingFinished) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodingFinished.ProtoReflect.Descriptor instead.
func (*TranscodingFinished) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *TranscodingFinished) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *TranscodingFinished) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *TranscodingFinished) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *TranscodingFinished) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type UploadFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID   string `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamID   uint32 `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	HLSUrl     string `protobuf:"bytes,4,opt,name=HLSUrl,proto3" json:"HLSUrl,omitempty"`
	SourceType string `protobuf:"bytes,5,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
}

func (x *UploadFinished) Reset() {
	*x = UploadFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFinished) ProtoMessage() {}

func (x *UploadFinished) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFinished.ProtoReflect.Descriptor instead.
func (*UploadFinished) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *UploadFinished) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *UploadFinished) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *UploadFinished) GetHLSUrl() string {
	if x != nil {
		return x.HLSUrl
	}
	return ""
}

func (x *UploadFinished) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

type StreamStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID   string `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamID   uint32 `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	HlsUrl     string `protobuf:"bytes,3,opt,name=HlsUrl,proto3" json:"HlsUrl,omitempty"`
	SourceType string `protobuf:"bytes,5,opt,name=SourceType,proto3" json:"SourceType,omitempty"`
}

func (x *StreamStarted) Reset() {
	*x = StreamStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStarted) ProtoMessage() {}

func (x *StreamStarted) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStarted.ProtoReflect.Descriptor instead.
func (*StreamStarted) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *StreamStarted) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *StreamStarted) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *StreamStarted) GetHlsUrl() string {
	if x != nil {
		return x.HlsUrl
	}
	return ""
}

func (x *StreamStarted) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

type SilenceResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerID string   `protobuf:"bytes,1,opt,name=WorkerID,proto3" json:"WorkerID,omitempty"`
	StreamID uint32   `protobuf:"varint,2,opt,name=StreamID,proto3" json:"StreamID,omitempty"`
	Starts   []uint32 `protobuf:"varint,3,rep,packed,name=starts,proto3" json:"starts,omitempty"`
	Ends     []uint32 `protobuf:"varint,4,rep,packed,name=ends,proto3" json:"ends,omitempty"`
}

func (x *SilenceResults) Reset() {
	*x = SilenceResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SilenceResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SilenceResults) ProtoMessage() {}

func (x *SilenceResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SilenceResults.ProtoReflect.Descriptor instead.
func (*SilenceResults) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *SilenceResults) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *SilenceResults) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

func (x *SilenceResults) GetStarts() []uint32 {
	if x != nil {
		return x.Starts
	}
	return nil
}

func (x *SilenceResults) GetEnds() []uint32 {
	if x != nil {
		return x.Ends
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x30, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x2c, 0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x56, 0x6f,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x56, 0x6f, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xc1, 0x01, 0x0a, 0x0f,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x22,
	0x6a, 0x0a, 0x10, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x18, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x6d, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x6c,
	0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x6c, 0x75, 0x67, 0x22, 0xc8, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54,
	0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x6f, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x6f, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x22,
	0xc7, 0x01, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x43, 0x50, 0x55, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x69, 0x73,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x0e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x4c, 0x53, 0x55, 0x72, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x4c, 0x53, 0x55, 0x72, 0x6c, 0x12, 0x1e,
	0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7f,
	0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6c, 0x73, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x7c, 0x0a, 0x0e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x04, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x02, 0x10, 0x01, 0x52, 0x04, 0x65, 0x6e, 0x64, 0x73, 0x32, 0xb0, 0x01,
	0x0a, 0x08, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72,
	0x65, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x45, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00,
	0x32, 0xbc, 0x03, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53,
	0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x1a, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6c, 0x66, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x17, 0x5a, 0x15, 0x54, 0x55, 0x4d, 0x2d, 0x4c, 0x69, 0x76, 0x65, 0x2d, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x2d, 0x76, 0x32, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_goTypes = []interface{}{
	(*StreamRequest)(nil),         // 0: api.StreamRequest
	(*PremiereRequest)(nil),       // 1: api.PremiereRequest
	(*EndStreamRequest)(nil),      // 2: api.EndStreamRequest
	(*Status)(nil),                // 3: api.Status
	(*SelfStreamRequest)(nil),     // 4: api.SelfStreamRequest
	(*SelfStreamResponse)(nil),    // 5: api.SelfStreamResponse
	(*HeartBeat)(nil),             // 6: api.HeartBeat
	(*StreamFinished)(nil),        // 7: api.StreamFinished
	(*TranscodingFinished)(nil),   // 8: api.TranscodingFinished
	(*UploadFinished)(nil),        // 9: api.UploadFinished
	(*StreamStarted)(nil),         // 10: api.StreamStarted
	(*SilenceResults)(nil),        // 11: api.SilenceResults
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_api_proto_depIdxs = []int32{
	12, // 0: api.StreamRequest.Start:type_name -> google.protobuf.Timestamp
	12, // 1: api.StreamRequest.End:type_name -> google.protobuf.Timestamp
	12, // 2: api.SelfStreamResponse.StreamStart:type_name -> google.protobuf.Timestamp
	0,  // 3: api.ToWorker.RequestStream:input_type -> api.StreamRequest
	1,  // 4: api.ToWorker.RequestPremiere:input_type -> api.PremiereRequest
	2,  // 5: api.ToWorker.RequestStreamEnd:input_type -> api.EndStreamRequest
	6,  // 6: api.FromWorker.SendHeartBeat:input_type -> api.HeartBeat
	8,  // 7: api.FromWorker.NotifyTranscodingFinished:input_type -> api.TranscodingFinished
	11, // 8: api.FromWorker.NotifySilenceResults:input_type -> api.SilenceResults
	10, // 9: api.FromWorker.NotifyStreamStarted:input_type -> api.StreamStarted
	7,  // 10: api.FromWorker.NotifyStreamFinished:input_type -> api.StreamFinished
	9,  // 11: api.FromWorker.NotifyUploadFinished:input_type -> api.UploadFinished
	4,  // 12: api.FromWorker.SendSelfStreamRequest:input_type -> api.SelfStreamRequest
	3,  // 13: api.ToWorker.RequestStream:output_type -> api.Status
	3,  // 14: api.ToWorker.RequestPremiere:output_type -> api.Status
	3,  // 15: api.ToWorker.RequestStreamEnd:output_type -> api.Status
	3,  // 16: api.FromWorker.SendHeartBeat:output_type -> api.Status
	3,  // 17: api.FromWorker.NotifyTranscodingFinished:output_type -> api.Status
	3,  // 18: api.FromWorker.NotifySilenceResults:output_type -> api.Status
	3,  // 19: api.FromWorker.NotifyStreamStarted:output_type -> api.Status
	3,  // 20: api.FromWorker.NotifyStreamFinished:output_type -> api.Status
	3,  // 21: api.FromWorker.NotifyUploadFinished:output_type -> api.Status
	5,  // 22: api.FromWorker.SendSelfStreamRequest:output_type -> api.SelfStreamResponse
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PremiereRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscodingFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SilenceResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
